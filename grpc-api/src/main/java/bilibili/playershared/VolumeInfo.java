// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

package bilibili.playershared;

/**
 * <pre>
 * 响度均衡操作信息
 * </pre>
 *
 * Protobuf type {@code bilibili.playershared.VolumeInfo}
 */
public final class VolumeInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bilibili.playershared.VolumeInfo)
    VolumeInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VolumeInfo.newBuilder() to construct.
  private VolumeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VolumeInfo() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VolumeInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VolumeInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VolumeInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bilibili.playershared.VolumeInfo.class, bilibili.playershared.VolumeInfo.Builder.class);
  }

  public static final int MEASURED_I_FIELD_NUMBER = 1;
  private double measuredI_ = 0D;
  /**
   * <pre>
   * Measured integrated loudness 实际综合响度
   * </pre>
   *
   * <code>double measured_i = 1;</code>
   * @return The measuredI.
   */
  @java.lang.Override
  public double getMeasuredI() {
    return measuredI_;
  }

  public static final int MEASURED_LRA_FIELD_NUMBER = 2;
  private double measuredLra_ = 0D;
  /**
   * <pre>
   * Measured loudness range 实际响度范围
   * </pre>
   *
   * <code>double measured_lra = 2;</code>
   * @return The measuredLra.
   */
  @java.lang.Override
  public double getMeasuredLra() {
    return measuredLra_;
  }

  public static final int MEASURED_TP_FIELD_NUMBER = 3;
  private double measuredTp_ = 0D;
  /**
   * <pre>
   * Measured true peak 实际响度真峰值
   * </pre>
   *
   * <code>double measured_tp = 3;</code>
   * @return The measuredTp.
   */
  @java.lang.Override
  public double getMeasuredTp() {
    return measuredTp_;
  }

  public static final int MEASURED_THRESHOLD_FIELD_NUMBER = 4;
  private double measuredThreshold_ = 0D;
  /**
   * <pre>
   * Measured threshold 实际响度阈值
   * </pre>
   *
   * <code>double measured_threshold = 4;</code>
   * @return The measuredThreshold.
   */
  @java.lang.Override
  public double getMeasuredThreshold() {
    return measuredThreshold_;
  }

  public static final int TARGET_OFFSET_FIELD_NUMBER = 5;
  private double targetOffset_ = 0D;
  /**
   * <pre>
   * Target offset gain(Gain is applied before the true-peak limiter) 目标增益Offset(增益在真实峰值限制器之前应用)
   * </pre>
   *
   * <code>double target_offset = 5;</code>
   * @return The targetOffset.
   */
  @java.lang.Override
  public double getTargetOffset() {
    return targetOffset_;
  }

  public static final int TARGET_I_FIELD_NUMBER = 6;
  private double targetI_ = 0D;
  /**
   * <pre>
   * Target integrated loudness 目标综合响度
   * </pre>
   *
   * <code>double target_i = 6;</code>
   * @return The targetI.
   */
  @java.lang.Override
  public double getTargetI() {
    return targetI_;
  }

  public static final int TARGET_TP_FIELD_NUMBER = 7;
  private double targetTp_ = 0D;
  /**
   * <pre>
   * Target true peak 目标响度真峰值
   * </pre>
   *
   * <code>double target_tp = 7;</code>
   * @return The targetTp.
   */
  @java.lang.Override
  public double getTargetTp() {
    return targetTp_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Double.doubleToRawLongBits(measuredI_) != 0) {
      output.writeDouble(1, measuredI_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredLra_) != 0) {
      output.writeDouble(2, measuredLra_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredTp_) != 0) {
      output.writeDouble(3, measuredTp_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredThreshold_) != 0) {
      output.writeDouble(4, measuredThreshold_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetOffset_) != 0) {
      output.writeDouble(5, targetOffset_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetI_) != 0) {
      output.writeDouble(6, targetI_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetTp_) != 0) {
      output.writeDouble(7, targetTp_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Double.doubleToRawLongBits(measuredI_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, measuredI_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredLra_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, measuredLra_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredTp_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, measuredTp_);
    }
    if (java.lang.Double.doubleToRawLongBits(measuredThreshold_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, measuredThreshold_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetOffset_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, targetOffset_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetI_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, targetI_);
    }
    if (java.lang.Double.doubleToRawLongBits(targetTp_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, targetTp_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bilibili.playershared.VolumeInfo)) {
      return super.equals(obj);
    }
    bilibili.playershared.VolumeInfo other = (bilibili.playershared.VolumeInfo) obj;

    if (java.lang.Double.doubleToLongBits(getMeasuredI())
        != java.lang.Double.doubleToLongBits(
            other.getMeasuredI())) return false;
    if (java.lang.Double.doubleToLongBits(getMeasuredLra())
        != java.lang.Double.doubleToLongBits(
            other.getMeasuredLra())) return false;
    if (java.lang.Double.doubleToLongBits(getMeasuredTp())
        != java.lang.Double.doubleToLongBits(
            other.getMeasuredTp())) return false;
    if (java.lang.Double.doubleToLongBits(getMeasuredThreshold())
        != java.lang.Double.doubleToLongBits(
            other.getMeasuredThreshold())) return false;
    if (java.lang.Double.doubleToLongBits(getTargetOffset())
        != java.lang.Double.doubleToLongBits(
            other.getTargetOffset())) return false;
    if (java.lang.Double.doubleToLongBits(getTargetI())
        != java.lang.Double.doubleToLongBits(
            other.getTargetI())) return false;
    if (java.lang.Double.doubleToLongBits(getTargetTp())
        != java.lang.Double.doubleToLongBits(
            other.getTargetTp())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MEASURED_I_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMeasuredI()));
    hash = (37 * hash) + MEASURED_LRA_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMeasuredLra()));
    hash = (37 * hash) + MEASURED_TP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMeasuredTp()));
    hash = (37 * hash) + MEASURED_THRESHOLD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMeasuredThreshold()));
    hash = (37 * hash) + TARGET_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTargetOffset()));
    hash = (37 * hash) + TARGET_I_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTargetI()));
    hash = (37 * hash) + TARGET_TP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTargetTp()));
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bilibili.playershared.VolumeInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.playershared.VolumeInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VolumeInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VolumeInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bilibili.playershared.VolumeInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 响度均衡操作信息
   * </pre>
   *
   * Protobuf type {@code bilibili.playershared.VolumeInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.playershared.VolumeInfo)
      bilibili.playershared.VolumeInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VolumeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VolumeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bilibili.playershared.VolumeInfo.class, bilibili.playershared.VolumeInfo.Builder.class);
    }

    // Construct using bilibili.playershared.VolumeInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      measuredI_ = 0D;
      measuredLra_ = 0D;
      measuredTp_ = 0D;
      measuredThreshold_ = 0D;
      targetOffset_ = 0D;
      targetI_ = 0D;
      targetTp_ = 0D;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VolumeInfo_descriptor;
    }

    @java.lang.Override
    public bilibili.playershared.VolumeInfo getDefaultInstanceForType() {
      return bilibili.playershared.VolumeInfo.getDefaultInstance();
    }

    @java.lang.Override
    public bilibili.playershared.VolumeInfo build() {
      bilibili.playershared.VolumeInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public bilibili.playershared.VolumeInfo buildPartial() {
      bilibili.playershared.VolumeInfo result = new bilibili.playershared.VolumeInfo(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(bilibili.playershared.VolumeInfo result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.measuredI_ = measuredI_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.measuredLra_ = measuredLra_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.measuredTp_ = measuredTp_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.measuredThreshold_ = measuredThreshold_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.targetOffset_ = targetOffset_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.targetI_ = targetI_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.targetTp_ = targetTp_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bilibili.playershared.VolumeInfo) {
        return mergeFrom((bilibili.playershared.VolumeInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bilibili.playershared.VolumeInfo other) {
      if (other == bilibili.playershared.VolumeInfo.getDefaultInstance()) return this;
      if (other.getMeasuredI() != 0D) {
        setMeasuredI(other.getMeasuredI());
      }
      if (other.getMeasuredLra() != 0D) {
        setMeasuredLra(other.getMeasuredLra());
      }
      if (other.getMeasuredTp() != 0D) {
        setMeasuredTp(other.getMeasuredTp());
      }
      if (other.getMeasuredThreshold() != 0D) {
        setMeasuredThreshold(other.getMeasuredThreshold());
      }
      if (other.getTargetOffset() != 0D) {
        setTargetOffset(other.getTargetOffset());
      }
      if (other.getTargetI() != 0D) {
        setTargetI(other.getTargetI());
      }
      if (other.getTargetTp() != 0D) {
        setTargetTp(other.getTargetTp());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              measuredI_ = input.readDouble();
              bitField0_ |= 0x00000001;
              break;
            } // case 9
            case 17: {
              measuredLra_ = input.readDouble();
              bitField0_ |= 0x00000002;
              break;
            } // case 17
            case 25: {
              measuredTp_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 25
            case 33: {
              measuredThreshold_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 33
            case 41: {
              targetOffset_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 41
            case 49: {
              targetI_ = input.readDouble();
              bitField0_ |= 0x00000020;
              break;
            } // case 49
            case 57: {
              targetTp_ = input.readDouble();
              bitField0_ |= 0x00000040;
              break;
            } // case 57
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private double measuredI_ ;
    /**
     * <pre>
     * Measured integrated loudness 实际综合响度
     * </pre>
     *
     * <code>double measured_i = 1;</code>
     * @return The measuredI.
     */
    @java.lang.Override
    public double getMeasuredI() {
      return measuredI_;
    }
    /**
     * <pre>
     * Measured integrated loudness 实际综合响度
     * </pre>
     *
     * <code>double measured_i = 1;</code>
     * @param value The measuredI to set.
     * @return This builder for chaining.
     */
    public Builder setMeasuredI(double value) {

      measuredI_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Measured integrated loudness 实际综合响度
     * </pre>
     *
     * <code>double measured_i = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMeasuredI() {
      bitField0_ = (bitField0_ & ~0x00000001);
      measuredI_ = 0D;
      onChanged();
      return this;
    }

    private double measuredLra_ ;
    /**
     * <pre>
     * Measured loudness range 实际响度范围
     * </pre>
     *
     * <code>double measured_lra = 2;</code>
     * @return The measuredLra.
     */
    @java.lang.Override
    public double getMeasuredLra() {
      return measuredLra_;
    }
    /**
     * <pre>
     * Measured loudness range 实际响度范围
     * </pre>
     *
     * <code>double measured_lra = 2;</code>
     * @param value The measuredLra to set.
     * @return This builder for chaining.
     */
    public Builder setMeasuredLra(double value) {

      measuredLra_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Measured loudness range 实际响度范围
     * </pre>
     *
     * <code>double measured_lra = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMeasuredLra() {
      bitField0_ = (bitField0_ & ~0x00000002);
      measuredLra_ = 0D;
      onChanged();
      return this;
    }

    private double measuredTp_ ;
    /**
     * <pre>
     * Measured true peak 实际响度真峰值
     * </pre>
     *
     * <code>double measured_tp = 3;</code>
     * @return The measuredTp.
     */
    @java.lang.Override
    public double getMeasuredTp() {
      return measuredTp_;
    }
    /**
     * <pre>
     * Measured true peak 实际响度真峰值
     * </pre>
     *
     * <code>double measured_tp = 3;</code>
     * @param value The measuredTp to set.
     * @return This builder for chaining.
     */
    public Builder setMeasuredTp(double value) {

      measuredTp_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Measured true peak 实际响度真峰值
     * </pre>
     *
     * <code>double measured_tp = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMeasuredTp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      measuredTp_ = 0D;
      onChanged();
      return this;
    }

    private double measuredThreshold_ ;
    /**
     * <pre>
     * Measured threshold 实际响度阈值
     * </pre>
     *
     * <code>double measured_threshold = 4;</code>
     * @return The measuredThreshold.
     */
    @java.lang.Override
    public double getMeasuredThreshold() {
      return measuredThreshold_;
    }
    /**
     * <pre>
     * Measured threshold 实际响度阈值
     * </pre>
     *
     * <code>double measured_threshold = 4;</code>
     * @param value The measuredThreshold to set.
     * @return This builder for chaining.
     */
    public Builder setMeasuredThreshold(double value) {

      measuredThreshold_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Measured threshold 实际响度阈值
     * </pre>
     *
     * <code>double measured_threshold = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMeasuredThreshold() {
      bitField0_ = (bitField0_ & ~0x00000008);
      measuredThreshold_ = 0D;
      onChanged();
      return this;
    }

    private double targetOffset_ ;
    /**
     * <pre>
     * Target offset gain(Gain is applied before the true-peak limiter) 目标增益Offset(增益在真实峰值限制器之前应用)
     * </pre>
     *
     * <code>double target_offset = 5;</code>
     * @return The targetOffset.
     */
    @java.lang.Override
    public double getTargetOffset() {
      return targetOffset_;
    }
    /**
     * <pre>
     * Target offset gain(Gain is applied before the true-peak limiter) 目标增益Offset(增益在真实峰值限制器之前应用)
     * </pre>
     *
     * <code>double target_offset = 5;</code>
     * @param value The targetOffset to set.
     * @return This builder for chaining.
     */
    public Builder setTargetOffset(double value) {

      targetOffset_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target offset gain(Gain is applied before the true-peak limiter) 目标增益Offset(增益在真实峰值限制器之前应用)
     * </pre>
     *
     * <code>double target_offset = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetOffset() {
      bitField0_ = (bitField0_ & ~0x00000010);
      targetOffset_ = 0D;
      onChanged();
      return this;
    }

    private double targetI_ ;
    /**
     * <pre>
     * Target integrated loudness 目标综合响度
     * </pre>
     *
     * <code>double target_i = 6;</code>
     * @return The targetI.
     */
    @java.lang.Override
    public double getTargetI() {
      return targetI_;
    }
    /**
     * <pre>
     * Target integrated loudness 目标综合响度
     * </pre>
     *
     * <code>double target_i = 6;</code>
     * @param value The targetI to set.
     * @return This builder for chaining.
     */
    public Builder setTargetI(double value) {

      targetI_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target integrated loudness 目标综合响度
     * </pre>
     *
     * <code>double target_i = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetI() {
      bitField0_ = (bitField0_ & ~0x00000020);
      targetI_ = 0D;
      onChanged();
      return this;
    }

    private double targetTp_ ;
    /**
     * <pre>
     * Target true peak 目标响度真峰值
     * </pre>
     *
     * <code>double target_tp = 7;</code>
     * @return The targetTp.
     */
    @java.lang.Override
    public double getTargetTp() {
      return targetTp_;
    }
    /**
     * <pre>
     * Target true peak 目标响度真峰值
     * </pre>
     *
     * <code>double target_tp = 7;</code>
     * @param value The targetTp to set.
     * @return This builder for chaining.
     */
    public Builder setTargetTp(double value) {

      targetTp_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target true peak 目标响度真峰值
     * </pre>
     *
     * <code>double target_tp = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetTp() {
      bitField0_ = (bitField0_ & ~0x00000040);
      targetTp_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bilibili.playershared.VolumeInfo)
  }

  // @@protoc_insertion_point(class_scope:bilibili.playershared.VolumeInfo)
  private static final bilibili.playershared.VolumeInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bilibili.playershared.VolumeInfo();
  }

  public static bilibili.playershared.VolumeInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VolumeInfo>
      PARSER = new com.google.protobuf.AbstractParser<VolumeInfo>() {
    @java.lang.Override
    public VolumeInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VolumeInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VolumeInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public bilibili.playershared.VolumeInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

