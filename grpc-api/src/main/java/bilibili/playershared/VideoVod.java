// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/playershared/playershared.proto

package bilibili.playershared;

/**
 * <pre>
 * 播放页信息-请求: 音视频VOD
 * </pre>
 *
 * Protobuf type {@code bilibili.playershared.VideoVod}
 */
public final class VideoVod extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bilibili.playershared.VideoVod)
    VideoVodOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VideoVod.newBuilder() to construct.
  private VideoVod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VideoVod() {
    preferCodecType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VideoVod();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VideoVod_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VideoVod_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bilibili.playershared.VideoVod.class, bilibili.playershared.VideoVod.Builder.class);
  }

  public static final int AID_FIELD_NUMBER = 1;
  private int aid_ = 0;
  /**
   * <pre>
   * 视频aid
   * </pre>
   *
   * <code>int32 aid = 1;</code>
   * @return The aid.
   */
  @java.lang.Override
  public int getAid() {
    return aid_;
  }

  public static final int CID_FIELD_NUMBER = 2;
  private int cid_ = 0;
  /**
   * <pre>
   * 视频cid
   * </pre>
   *
   * <code>int32 cid = 2;</code>
   * @return The cid.
   */
  @java.lang.Override
  public int getCid() {
    return cid_;
  }

  public static final int QN_FIELD_NUMBER = 3;
  private long qn_ = 0L;
  /**
   * <pre>
   * 清晰度
   * </pre>
   *
   * <code>uint64 qn = 3;</code>
   * @return The qn.
   */
  @java.lang.Override
  public long getQn() {
    return qn_;
  }

  public static final int FNVER_FIELD_NUMBER = 4;
  private int fnver_ = 0;
  /**
   * <pre>
   * 视频流版本
   * </pre>
   *
   * <code>int32 fnver = 4;</code>
   * @return The fnver.
   */
  @java.lang.Override
  public int getFnver() {
    return fnver_;
  }

  public static final int FNVAL_FIELD_NUMBER = 5;
  private int fnval_ = 0;
  /**
   * <pre>
   * 视频流格式
   * </pre>
   *
   * <code>int32 fnval = 5;</code>
   * @return The fnval.
   */
  @java.lang.Override
  public int getFnval() {
    return fnval_;
  }

  public static final int DOWNLOAD_FIELD_NUMBER = 6;
  private int download_ = 0;
  /**
   * <pre>
   * 下载模式
   * 0:播放 1:flv下载 2:dash下载
   * </pre>
   *
   * <code>uint32 download = 6;</code>
   * @return The download.
   */
  @java.lang.Override
  public int getDownload() {
    return download_;
  }

  public static final int FORCE_HOST_FIELD_NUMBER = 7;
  private int forceHost_ = 0;
  /**
   * <pre>
   * 流url强制是用域名
   * 0:允许使用ip 1:使用http 2:使用https
   * </pre>
   *
   * <code>int32 force_host = 7;</code>
   * @return The forceHost.
   */
  @java.lang.Override
  public int getForceHost() {
    return forceHost_;
  }

  public static final int FOURK_FIELD_NUMBER = 8;
  private boolean fourk_ = false;
  /**
   * <pre>
   * 是否4K
   * </pre>
   *
   * <code>bool fourk = 8;</code>
   * @return The fourk.
   */
  @java.lang.Override
  public boolean getFourk() {
    return fourk_;
  }

  public static final int PREFER_CODEC_TYPE_FIELD_NUMBER = 9;
  private int preferCodecType_ = 0;
  /**
   * <pre>
   * 视频编码
   * </pre>
   *
   * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
   * @return The enum numeric value on the wire for preferCodecType.
   */
  @java.lang.Override public int getPreferCodecTypeValue() {
    return preferCodecType_;
  }
  /**
   * <pre>
   * 视频编码
   * </pre>
   *
   * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
   * @return The preferCodecType.
   */
  @java.lang.Override public bilibili.playershared.CodeType getPreferCodecType() {
    bilibili.playershared.CodeType result = bilibili.playershared.CodeType.forNumber(preferCodecType_);
    return result == null ? bilibili.playershared.CodeType.UNRECOGNIZED : result;
  }

  public static final int VOICE_BALANCE_FIELD_NUMBER = 10;
  private long voiceBalance_ = 0L;
  /**
   * <pre>
   * 响度均衡
   * </pre>
   *
   * <code>uint64 voice_balance = 10;</code>
   * @return The voiceBalance.
   */
  @java.lang.Override
  public long getVoiceBalance() {
    return voiceBalance_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (aid_ != 0) {
      output.writeInt32(1, aid_);
    }
    if (cid_ != 0) {
      output.writeInt32(2, cid_);
    }
    if (qn_ != 0L) {
      output.writeUInt64(3, qn_);
    }
    if (fnver_ != 0) {
      output.writeInt32(4, fnver_);
    }
    if (fnval_ != 0) {
      output.writeInt32(5, fnval_);
    }
    if (download_ != 0) {
      output.writeUInt32(6, download_);
    }
    if (forceHost_ != 0) {
      output.writeInt32(7, forceHost_);
    }
    if (fourk_ != false) {
      output.writeBool(8, fourk_);
    }
    if (preferCodecType_ != bilibili.playershared.CodeType.NOCODE.getNumber()) {
      output.writeEnum(9, preferCodecType_);
    }
    if (voiceBalance_ != 0L) {
      output.writeUInt64(10, voiceBalance_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (aid_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, aid_);
    }
    if (cid_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, cid_);
    }
    if (qn_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, qn_);
    }
    if (fnver_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, fnver_);
    }
    if (fnval_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, fnval_);
    }
    if (download_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, download_);
    }
    if (forceHost_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, forceHost_);
    }
    if (fourk_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, fourk_);
    }
    if (preferCodecType_ != bilibili.playershared.CodeType.NOCODE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, preferCodecType_);
    }
    if (voiceBalance_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, voiceBalance_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bilibili.playershared.VideoVod)) {
      return super.equals(obj);
    }
    bilibili.playershared.VideoVod other = (bilibili.playershared.VideoVod) obj;

    if (getAid()
        != other.getAid()) return false;
    if (getCid()
        != other.getCid()) return false;
    if (getQn()
        != other.getQn()) return false;
    if (getFnver()
        != other.getFnver()) return false;
    if (getFnval()
        != other.getFnval()) return false;
    if (getDownload()
        != other.getDownload()) return false;
    if (getForceHost()
        != other.getForceHost()) return false;
    if (getFourk()
        != other.getFourk()) return false;
    if (preferCodecType_ != other.preferCodecType_) return false;
    if (getVoiceBalance()
        != other.getVoiceBalance()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AID_FIELD_NUMBER;
    hash = (53 * hash) + getAid();
    hash = (37 * hash) + CID_FIELD_NUMBER;
    hash = (53 * hash) + getCid();
    hash = (37 * hash) + QN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getQn());
    hash = (37 * hash) + FNVER_FIELD_NUMBER;
    hash = (53 * hash) + getFnver();
    hash = (37 * hash) + FNVAL_FIELD_NUMBER;
    hash = (53 * hash) + getFnval();
    hash = (37 * hash) + DOWNLOAD_FIELD_NUMBER;
    hash = (53 * hash) + getDownload();
    hash = (37 * hash) + FORCE_HOST_FIELD_NUMBER;
    hash = (53 * hash) + getForceHost();
    hash = (37 * hash) + FOURK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFourk());
    hash = (37 * hash) + PREFER_CODEC_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + preferCodecType_;
    hash = (37 * hash) + VOICE_BALANCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getVoiceBalance());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bilibili.playershared.VideoVod parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VideoVod parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.playershared.VideoVod parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.playershared.VideoVod parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VideoVod parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.playershared.VideoVod parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bilibili.playershared.VideoVod prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 播放页信息-请求: 音视频VOD
   * </pre>
   *
   * Protobuf type {@code bilibili.playershared.VideoVod}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.playershared.VideoVod)
      bilibili.playershared.VideoVodOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VideoVod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VideoVod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bilibili.playershared.VideoVod.class, bilibili.playershared.VideoVod.Builder.class);
    }

    // Construct using bilibili.playershared.VideoVod.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      aid_ = 0;
      cid_ = 0;
      qn_ = 0L;
      fnver_ = 0;
      fnval_ = 0;
      download_ = 0;
      forceHost_ = 0;
      fourk_ = false;
      preferCodecType_ = 0;
      voiceBalance_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bilibili.playershared.Playershared.internal_static_bilibili_playershared_VideoVod_descriptor;
    }

    @java.lang.Override
    public bilibili.playershared.VideoVod getDefaultInstanceForType() {
      return bilibili.playershared.VideoVod.getDefaultInstance();
    }

    @java.lang.Override
    public bilibili.playershared.VideoVod build() {
      bilibili.playershared.VideoVod result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public bilibili.playershared.VideoVod buildPartial() {
      bilibili.playershared.VideoVod result = new bilibili.playershared.VideoVod(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(bilibili.playershared.VideoVod result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.aid_ = aid_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.cid_ = cid_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.qn_ = qn_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.fnver_ = fnver_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.fnval_ = fnval_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.download_ = download_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.forceHost_ = forceHost_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.fourk_ = fourk_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.preferCodecType_ = preferCodecType_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.voiceBalance_ = voiceBalance_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bilibili.playershared.VideoVod) {
        return mergeFrom((bilibili.playershared.VideoVod)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bilibili.playershared.VideoVod other) {
      if (other == bilibili.playershared.VideoVod.getDefaultInstance()) return this;
      if (other.getAid() != 0) {
        setAid(other.getAid());
      }
      if (other.getCid() != 0) {
        setCid(other.getCid());
      }
      if (other.getQn() != 0L) {
        setQn(other.getQn());
      }
      if (other.getFnver() != 0) {
        setFnver(other.getFnver());
      }
      if (other.getFnval() != 0) {
        setFnval(other.getFnval());
      }
      if (other.getDownload() != 0) {
        setDownload(other.getDownload());
      }
      if (other.getForceHost() != 0) {
        setForceHost(other.getForceHost());
      }
      if (other.getFourk() != false) {
        setFourk(other.getFourk());
      }
      if (other.preferCodecType_ != 0) {
        setPreferCodecTypeValue(other.getPreferCodecTypeValue());
      }
      if (other.getVoiceBalance() != 0L) {
        setVoiceBalance(other.getVoiceBalance());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              aid_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              cid_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              qn_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              fnver_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              fnval_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              download_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              forceHost_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              fourk_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              preferCodecType_ = input.readEnum();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              voiceBalance_ = input.readUInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int aid_ ;
    /**
     * <pre>
     * 视频aid
     * </pre>
     *
     * <code>int32 aid = 1;</code>
     * @return The aid.
     */
    @java.lang.Override
    public int getAid() {
      return aid_;
    }
    /**
     * <pre>
     * 视频aid
     * </pre>
     *
     * <code>int32 aid = 1;</code>
     * @param value The aid to set.
     * @return This builder for chaining.
     */
    public Builder setAid(int value) {

      aid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频aid
     * </pre>
     *
     * <code>int32 aid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      aid_ = 0;
      onChanged();
      return this;
    }

    private int cid_ ;
    /**
     * <pre>
     * 视频cid
     * </pre>
     *
     * <code>int32 cid = 2;</code>
     * @return The cid.
     */
    @java.lang.Override
    public int getCid() {
      return cid_;
    }
    /**
     * <pre>
     * 视频cid
     * </pre>
     *
     * <code>int32 cid = 2;</code>
     * @param value The cid to set.
     * @return This builder for chaining.
     */
    public Builder setCid(int value) {

      cid_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频cid
     * </pre>
     *
     * <code>int32 cid = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCid() {
      bitField0_ = (bitField0_ & ~0x00000002);
      cid_ = 0;
      onChanged();
      return this;
    }

    private long qn_ ;
    /**
     * <pre>
     * 清晰度
     * </pre>
     *
     * <code>uint64 qn = 3;</code>
     * @return The qn.
     */
    @java.lang.Override
    public long getQn() {
      return qn_;
    }
    /**
     * <pre>
     * 清晰度
     * </pre>
     *
     * <code>uint64 qn = 3;</code>
     * @param value The qn to set.
     * @return This builder for chaining.
     */
    public Builder setQn(long value) {

      qn_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 清晰度
     * </pre>
     *
     * <code>uint64 qn = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearQn() {
      bitField0_ = (bitField0_ & ~0x00000004);
      qn_ = 0L;
      onChanged();
      return this;
    }

    private int fnver_ ;
    /**
     * <pre>
     * 视频流版本
     * </pre>
     *
     * <code>int32 fnver = 4;</code>
     * @return The fnver.
     */
    @java.lang.Override
    public int getFnver() {
      return fnver_;
    }
    /**
     * <pre>
     * 视频流版本
     * </pre>
     *
     * <code>int32 fnver = 4;</code>
     * @param value The fnver to set.
     * @return This builder for chaining.
     */
    public Builder setFnver(int value) {

      fnver_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流版本
     * </pre>
     *
     * <code>int32 fnver = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFnver() {
      bitField0_ = (bitField0_ & ~0x00000008);
      fnver_ = 0;
      onChanged();
      return this;
    }

    private int fnval_ ;
    /**
     * <pre>
     * 视频流格式
     * </pre>
     *
     * <code>int32 fnval = 5;</code>
     * @return The fnval.
     */
    @java.lang.Override
    public int getFnval() {
      return fnval_;
    }
    /**
     * <pre>
     * 视频流格式
     * </pre>
     *
     * <code>int32 fnval = 5;</code>
     * @param value The fnval to set.
     * @return This builder for chaining.
     */
    public Builder setFnval(int value) {

      fnval_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流格式
     * </pre>
     *
     * <code>int32 fnval = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFnval() {
      bitField0_ = (bitField0_ & ~0x00000010);
      fnval_ = 0;
      onChanged();
      return this;
    }

    private int download_ ;
    /**
     * <pre>
     * 下载模式
     * 0:播放 1:flv下载 2:dash下载
     * </pre>
     *
     * <code>uint32 download = 6;</code>
     * @return The download.
     */
    @java.lang.Override
    public int getDownload() {
      return download_;
    }
    /**
     * <pre>
     * 下载模式
     * 0:播放 1:flv下载 2:dash下载
     * </pre>
     *
     * <code>uint32 download = 6;</code>
     * @param value The download to set.
     * @return This builder for chaining.
     */
    public Builder setDownload(int value) {

      download_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 下载模式
     * 0:播放 1:flv下载 2:dash下载
     * </pre>
     *
     * <code>uint32 download = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDownload() {
      bitField0_ = (bitField0_ & ~0x00000020);
      download_ = 0;
      onChanged();
      return this;
    }

    private int forceHost_ ;
    /**
     * <pre>
     * 流url强制是用域名
     * 0:允许使用ip 1:使用http 2:使用https
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @return The forceHost.
     */
    @java.lang.Override
    public int getForceHost() {
      return forceHost_;
    }
    /**
     * <pre>
     * 流url强制是用域名
     * 0:允许使用ip 1:使用http 2:使用https
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @param value The forceHost to set.
     * @return This builder for chaining.
     */
    public Builder setForceHost(int value) {

      forceHost_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 流url强制是用域名
     * 0:允许使用ip 1:使用http 2:使用https
     * </pre>
     *
     * <code>int32 force_host = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearForceHost() {
      bitField0_ = (bitField0_ & ~0x00000040);
      forceHost_ = 0;
      onChanged();
      return this;
    }

    private boolean fourk_ ;
    /**
     * <pre>
     * 是否4K
     * </pre>
     *
     * <code>bool fourk = 8;</code>
     * @return The fourk.
     */
    @java.lang.Override
    public boolean getFourk() {
      return fourk_;
    }
    /**
     * <pre>
     * 是否4K
     * </pre>
     *
     * <code>bool fourk = 8;</code>
     * @param value The fourk to set.
     * @return This builder for chaining.
     */
    public Builder setFourk(boolean value) {

      fourk_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否4K
     * </pre>
     *
     * <code>bool fourk = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearFourk() {
      bitField0_ = (bitField0_ & ~0x00000080);
      fourk_ = false;
      onChanged();
      return this;
    }

    private int preferCodecType_ = 0;
    /**
     * <pre>
     * 视频编码
     * </pre>
     *
     * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
     * @return The enum numeric value on the wire for preferCodecType.
     */
    @java.lang.Override public int getPreferCodecTypeValue() {
      return preferCodecType_;
    }
    /**
     * <pre>
     * 视频编码
     * </pre>
     *
     * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
     * @param value The enum numeric value on the wire for preferCodecType to set.
     * @return This builder for chaining.
     */
    public Builder setPreferCodecTypeValue(int value) {
      preferCodecType_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频编码
     * </pre>
     *
     * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
     * @return The preferCodecType.
     */
    @java.lang.Override
    public bilibili.playershared.CodeType getPreferCodecType() {
      bilibili.playershared.CodeType result = bilibili.playershared.CodeType.forNumber(preferCodecType_);
      return result == null ? bilibili.playershared.CodeType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 视频编码
     * </pre>
     *
     * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
     * @param value The preferCodecType to set.
     * @return This builder for chaining.
     */
    public Builder setPreferCodecType(bilibili.playershared.CodeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      preferCodecType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频编码
     * </pre>
     *
     * <code>.bilibili.playershared.CodeType prefer_codec_type = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreferCodecType() {
      bitField0_ = (bitField0_ & ~0x00000100);
      preferCodecType_ = 0;
      onChanged();
      return this;
    }

    private long voiceBalance_ ;
    /**
     * <pre>
     * 响度均衡
     * </pre>
     *
     * <code>uint64 voice_balance = 10;</code>
     * @return The voiceBalance.
     */
    @java.lang.Override
    public long getVoiceBalance() {
      return voiceBalance_;
    }
    /**
     * <pre>
     * 响度均衡
     * </pre>
     *
     * <code>uint64 voice_balance = 10;</code>
     * @param value The voiceBalance to set.
     * @return This builder for chaining.
     */
    public Builder setVoiceBalance(long value) {

      voiceBalance_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 响度均衡
     * </pre>
     *
     * <code>uint64 voice_balance = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearVoiceBalance() {
      bitField0_ = (bitField0_ & ~0x00000200);
      voiceBalance_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bilibili.playershared.VideoVod)
  }

  // @@protoc_insertion_point(class_scope:bilibili.playershared.VideoVod)
  private static final bilibili.playershared.VideoVod DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bilibili.playershared.VideoVod();
  }

  public static bilibili.playershared.VideoVod getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VideoVod>
      PARSER = new com.google.protobuf.AbstractParser<VideoVod>() {
    @java.lang.Override
    public VideoVod parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VideoVod> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VideoVod> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public bilibili.playershared.VideoVod getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

