// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/api/probe/v1/probe.proto

package bilibili.api.probe.v1;

public interface EmbeddedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bilibili.api.probe.v1.Embedded)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * </pre>
   *
   * <code>bool bool_val = 1;</code>
   * @return The boolVal.
   */
  boolean getBoolVal();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 int32_val = 2;</code>
   * @return The int32Val.
   */
  int getInt32Val();

  /**
   * <pre>
   * </pre>
   *
   * <code>int64 int64_val = 3;</code>
   * @return The int64Val.
   */
  long getInt64Val();

  /**
   * <pre>
   * </pre>
   *
   * <code>float float_val = 4;</code>
   * @return The floatVal.
   */
  float getFloatVal();

  /**
   * <pre>
   * </pre>
   *
   * <code>double double_val = 5;</code>
   * @return The doubleVal.
   */
  double getDoubleVal();

  /**
   * <pre>
   * </pre>
   *
   * <code>string string_val = 6;</code>
   * @return The stringVal.
   */
  java.lang.String getStringVal();
  /**
   * <pre>
   * </pre>
   *
   * <code>string string_val = 6;</code>
   * @return The bytes for stringVal.
   */
  com.google.protobuf.ByteString
      getStringValBytes();

  /**
   * <pre>
   * </pre>
   *
   * <code>repeated bool repeated_bool_val = 7;</code>
   * @return A list containing the repeatedBoolVal.
   */
  java.util.List<java.lang.Boolean> getRepeatedBoolValList();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated bool repeated_bool_val = 7;</code>
   * @return The count of repeatedBoolVal.
   */
  int getRepeatedBoolValCount();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated bool repeated_bool_val = 7;</code>
   * @param index The index of the element to return.
   * @return The repeatedBoolVal at the given index.
   */
  boolean getRepeatedBoolVal(int index);

  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated int32 repeated_int32_val = 8;</code>
   * @return A list containing the repeatedInt32Val.
   */
  java.util.List<java.lang.Integer> getRepeatedInt32ValList();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated int32 repeated_int32_val = 8;</code>
   * @return The count of repeatedInt32Val.
   */
  int getRepeatedInt32ValCount();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated int32 repeated_int32_val = 8;</code>
   * @param index The index of the element to return.
   * @return The repeatedInt32Val at the given index.
   */
  int getRepeatedInt32Val(int index);

  /**
   * <pre>
   * </pre>
   *
   * <code>repeated int64 repeated_int64_val = 9;</code>
   * @return A list containing the repeatedInt64Val.
   */
  java.util.List<java.lang.Long> getRepeatedInt64ValList();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated int64 repeated_int64_val = 9;</code>
   * @return The count of repeatedInt64Val.
   */
  int getRepeatedInt64ValCount();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated int64 repeated_int64_val = 9;</code>
   * @param index The index of the element to return.
   * @return The repeatedInt64Val at the given index.
   */
  long getRepeatedInt64Val(int index);

  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated float repeated_float_val = 10;</code>
   * @return A list containing the repeatedFloatVal.
   */
  java.util.List<java.lang.Float> getRepeatedFloatValList();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated float repeated_float_val = 10;</code>
   * @return The count of repeatedFloatVal.
   */
  int getRepeatedFloatValCount();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated float repeated_float_val = 10;</code>
   * @param index The index of the element to return.
   * @return The repeatedFloatVal at the given index.
   */
  float getRepeatedFloatVal(int index);

  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated double repeated_double_val = 11;</code>
   * @return A list containing the repeatedDoubleVal.
   */
  java.util.List<java.lang.Double> getRepeatedDoubleValList();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated double repeated_double_val = 11;</code>
   * @return The count of repeatedDoubleVal.
   */
  int getRepeatedDoubleValCount();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated double repeated_double_val = 11;</code>
   * @param index The index of the element to return.
   * @return The repeatedDoubleVal at the given index.
   */
  double getRepeatedDoubleVal(int index);

  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated string repeated_string_val = 12;</code>
   * @return A list containing the repeatedStringVal.
   */
  java.util.List<java.lang.String>
      getRepeatedStringValList();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated string repeated_string_val = 12;</code>
   * @return The count of repeatedStringVal.
   */
  int getRepeatedStringValCount();
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated string repeated_string_val = 12;</code>
   * @param index The index of the element to return.
   * @return The repeatedStringVal at the given index.
   */
  java.lang.String getRepeatedStringVal(int index);
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>repeated string repeated_string_val = 12;</code>
   * @param index The index of the value to return.
   * @return The bytes of the repeatedStringVal at the given index.
   */
  com.google.protobuf.ByteString
      getRepeatedStringValBytes(int index);

  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, string&gt; map_string_val = 13;</code>
   */
  int getMapStringValCount();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, string&gt; map_string_val = 13;</code>
   */
  boolean containsMapStringVal(
      java.lang.String key);
  /**
   * Use {@link #getMapStringValMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMapStringVal();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, string&gt; map_string_val = 13;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMapStringValMap();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, string&gt; map_string_val = 13;</code>
   */
  /* nullable */
java.lang.String getMapStringValOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, string&gt; map_string_val = 13;</code>
   */
  java.lang.String getMapStringValOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, .bilibili.api.probe.v1.ErrorMessage&gt; map_error_val = 14;</code>
   */
  int getMapErrorValCount();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, .bilibili.api.probe.v1.ErrorMessage&gt; map_error_val = 14;</code>
   */
  boolean containsMapErrorVal(
      java.lang.String key);
  /**
   * Use {@link #getMapErrorValMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, bilibili.api.probe.v1.ErrorMessage>
  getMapErrorVal();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, .bilibili.api.probe.v1.ErrorMessage&gt; map_error_val = 14;</code>
   */
  java.util.Map<java.lang.String, bilibili.api.probe.v1.ErrorMessage>
  getMapErrorValMap();
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, .bilibili.api.probe.v1.ErrorMessage&gt; map_error_val = 14;</code>
   */
  /* nullable */
bilibili.api.probe.v1.ErrorMessage getMapErrorValOrDefault(
      java.lang.String key,
      /* nullable */
bilibili.api.probe.v1.ErrorMessage defaultValue);
  /**
   * <pre>
   * </pre>
   *
   * <code>map&lt;string, .bilibili.api.probe.v1.ErrorMessage&gt; map_error_val = 14;</code>
   */
  bilibili.api.probe.v1.ErrorMessage getMapErrorValOrThrow(
      java.lang.String key);
}
