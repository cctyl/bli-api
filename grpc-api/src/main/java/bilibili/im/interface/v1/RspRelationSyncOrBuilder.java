// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/im/interfaces/v1/im.proto

package bilibili.im.interface.v1;

public interface RspRelationSyncOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bilibili.im.interface.v1.RspRelationSync)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 full = 1;</code>
   * @return The full.
   */
  int getFull();

  /**
   * <pre>
   * 增量日志
   * </pre>
   *
   * <code>repeated .bilibili.im.type.RelationLog relation_logs = 2;</code>
   */
  java.util.List<bilibili.im.type.RelationLog> 
      getRelationLogsList();
  /**
   * <pre>
   * 增量日志
   * </pre>
   *
   * <code>repeated .bilibili.im.type.RelationLog relation_logs = 2;</code>
   */
  bilibili.im.type.RelationLog getRelationLogs(int index);
  /**
   * <pre>
   * 增量日志
   * </pre>
   *
   * <code>repeated .bilibili.im.type.RelationLog relation_logs = 2;</code>
   */
  int getRelationLogsCount();
  /**
   * <pre>
   * 增量日志
   * </pre>
   *
   * <code>repeated .bilibili.im.type.RelationLog relation_logs = 2;</code>
   */
  java.util.List<? extends bilibili.im.type.RelationLogOrBuilder> 
      getRelationLogsOrBuilderList();
  /**
   * <pre>
   * 增量日志
   * </pre>
   *
   * <code>repeated .bilibili.im.type.RelationLog relation_logs = 2;</code>
   */
  bilibili.im.type.RelationLogOrBuilder getRelationLogsOrBuilder(
      int index);

  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.FriendRelation friend_list = 3;</code>
   */
  java.util.List<bilibili.im.type.FriendRelation> 
      getFriendListList();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.FriendRelation friend_list = 3;</code>
   */
  bilibili.im.type.FriendRelation getFriendList(int index);
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.FriendRelation friend_list = 3;</code>
   */
  int getFriendListCount();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.FriendRelation friend_list = 3;</code>
   */
  java.util.List<? extends bilibili.im.type.FriendRelationOrBuilder> 
      getFriendListOrBuilderList();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.FriendRelation friend_list = 3;</code>
   */
  bilibili.im.type.FriendRelationOrBuilder getFriendListOrBuilder(
      int index);

  /**
   * <pre>
   * 服务器端最大的relation seqno
   * </pre>
   *
   * <code>uint64 server_relation_oplog_seqno = 4;</code>
   * @return The serverRelationOplogSeqno.
   */
  long getServerRelationOplogSeqno();

  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.GroupRelation group_list = 5;</code>
   */
  java.util.List<bilibili.im.type.GroupRelation> 
      getGroupListList();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.GroupRelation group_list = 5;</code>
   */
  bilibili.im.type.GroupRelation getGroupList(int index);
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.GroupRelation group_list = 5;</code>
   */
  int getGroupListCount();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.GroupRelation group_list = 5;</code>
   */
  java.util.List<? extends bilibili.im.type.GroupRelationOrBuilder> 
      getGroupListOrBuilderList();
  /**
   * <pre>
   * 全量列表
   * </pre>
   *
   * <code>repeated .bilibili.im.type.GroupRelation group_list = 5;</code>
   */
  bilibili.im.type.GroupRelationOrBuilder getGroupListOrBuilder(
      int index);
}
