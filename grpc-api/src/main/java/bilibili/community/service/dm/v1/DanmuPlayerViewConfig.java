// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/community/service/dm/v1/dm.proto

package bilibili.community.service.dm.v1;

/**
 * <pre>
 * 弹幕配置信息
 * </pre>
 *
 * Protobuf type {@code bilibili.community.service.dm.v1.DanmuPlayerViewConfig}
 */
public final class DanmuPlayerViewConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bilibili.community.service.dm.v1.DanmuPlayerViewConfig)
    DanmuPlayerViewConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DanmuPlayerViewConfig.newBuilder() to construct.
  private DanmuPlayerViewConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DanmuPlayerViewConfig() {
    danmukuPlayerDynamicConfig_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DanmuPlayerViewConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bilibili.community.service.dm.v1.Dm.internal_static_bilibili_community_service_dm_v1_DanmuPlayerViewConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bilibili.community.service.dm.v1.Dm.internal_static_bilibili_community_service_dm_v1_DanmuPlayerViewConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bilibili.community.service.dm.v1.DanmuPlayerViewConfig.class, bilibili.community.service.dm.v1.DanmuPlayerViewConfig.Builder.class);
  }

  public static final int DANMUKU_DEFAULT_PLAYER_CONFIG_FIELD_NUMBER = 1;
  private bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmukuDefaultPlayerConfig_;
  /**
   * <pre>
   * 弹幕默认配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
   * @return Whether the danmukuDefaultPlayerConfig field is set.
   */
  @java.lang.Override
  public boolean hasDanmukuDefaultPlayerConfig() {
    return danmukuDefaultPlayerConfig_ != null;
  }
  /**
   * <pre>
   * 弹幕默认配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
   * @return The danmukuDefaultPlayerConfig.
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig getDanmukuDefaultPlayerConfig() {
    return danmukuDefaultPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.getDefaultInstance() : danmukuDefaultPlayerConfig_;
  }
  /**
   * <pre>
   * 弹幕默认配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuDefaultPlayerConfigOrBuilder getDanmukuDefaultPlayerConfigOrBuilder() {
    return danmukuDefaultPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.getDefaultInstance() : danmukuDefaultPlayerConfig_;
  }

  public static final int DANMUKU_PLAYER_CONFIG_FIELD_NUMBER = 2;
  private bilibili.community.service.dm.v1.DanmuPlayerConfig danmukuPlayerConfig_;
  /**
   * <pre>
   * 弹幕用户配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
   * @return Whether the danmukuPlayerConfig field is set.
   */
  @java.lang.Override
  public boolean hasDanmukuPlayerConfig() {
    return danmukuPlayerConfig_ != null;
  }
  /**
   * <pre>
   * 弹幕用户配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
   * @return The danmukuPlayerConfig.
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerConfig getDanmukuPlayerConfig() {
    return danmukuPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfig.getDefaultInstance() : danmukuPlayerConfig_;
  }
  /**
   * <pre>
   * 弹幕用户配置
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerConfigOrBuilder getDanmukuPlayerConfigOrBuilder() {
    return danmukuPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfig.getDefaultInstance() : danmukuPlayerConfig_;
  }

  public static final int DANMUKU_PLAYER_DYNAMIC_CONFIG_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig> danmukuPlayerDynamicConfig_;
  /**
   * <pre>
   * 弹幕显示区域自动配置列表
   * </pre>
   *
   * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
   */
  @java.lang.Override
  public java.util.List<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig> getDanmukuPlayerDynamicConfigList() {
    return danmukuPlayerDynamicConfig_;
  }
  /**
   * <pre>
   * 弹幕显示区域自动配置列表
   * </pre>
   *
   * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder> 
      getDanmukuPlayerDynamicConfigOrBuilderList() {
    return danmukuPlayerDynamicConfig_;
  }
  /**
   * <pre>
   * 弹幕显示区域自动配置列表
   * </pre>
   *
   * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
   */
  @java.lang.Override
  public int getDanmukuPlayerDynamicConfigCount() {
    return danmukuPlayerDynamicConfig_.size();
  }
  /**
   * <pre>
   * 弹幕显示区域自动配置列表
   * </pre>
   *
   * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig getDanmukuPlayerDynamicConfig(int index) {
    return danmukuPlayerDynamicConfig_.get(index);
  }
  /**
   * <pre>
   * 弹幕显示区域自动配置列表
   * </pre>
   *
   * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder getDanmukuPlayerDynamicConfigOrBuilder(
      int index) {
    return danmukuPlayerDynamicConfig_.get(index);
  }

  public static final int DANMUKU_PLAYER_CONFIG_PANEL_FIELD_NUMBER = 4;
  private bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmukuPlayerConfigPanel_;
  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
   * @return Whether the danmukuPlayerConfigPanel field is set.
   */
  @java.lang.Override
  public boolean hasDanmukuPlayerConfigPanel() {
    return danmukuPlayerConfigPanel_ != null;
  }
  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
   * @return The danmukuPlayerConfigPanel.
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerConfigPanel getDanmukuPlayerConfigPanel() {
    return danmukuPlayerConfigPanel_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.getDefaultInstance() : danmukuPlayerConfigPanel_;
  }
  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
   */
  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerConfigPanelOrBuilder getDanmukuPlayerConfigPanelOrBuilder() {
    return danmukuPlayerConfigPanel_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.getDefaultInstance() : danmukuPlayerConfigPanel_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (danmukuDefaultPlayerConfig_ != null) {
      output.writeMessage(1, getDanmukuDefaultPlayerConfig());
    }
    if (danmukuPlayerConfig_ != null) {
      output.writeMessage(2, getDanmukuPlayerConfig());
    }
    for (int i = 0; i < danmukuPlayerDynamicConfig_.size(); i++) {
      output.writeMessage(3, danmukuPlayerDynamicConfig_.get(i));
    }
    if (danmukuPlayerConfigPanel_ != null) {
      output.writeMessage(4, getDanmukuPlayerConfigPanel());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (danmukuDefaultPlayerConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDanmukuDefaultPlayerConfig());
    }
    if (danmukuPlayerConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDanmukuPlayerConfig());
    }
    for (int i = 0; i < danmukuPlayerDynamicConfig_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, danmukuPlayerDynamicConfig_.get(i));
    }
    if (danmukuPlayerConfigPanel_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDanmukuPlayerConfigPanel());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bilibili.community.service.dm.v1.DanmuPlayerViewConfig)) {
      return super.equals(obj);
    }
    bilibili.community.service.dm.v1.DanmuPlayerViewConfig other = (bilibili.community.service.dm.v1.DanmuPlayerViewConfig) obj;

    if (hasDanmukuDefaultPlayerConfig() != other.hasDanmukuDefaultPlayerConfig()) return false;
    if (hasDanmukuDefaultPlayerConfig()) {
      if (!getDanmukuDefaultPlayerConfig()
          .equals(other.getDanmukuDefaultPlayerConfig())) return false;
    }
    if (hasDanmukuPlayerConfig() != other.hasDanmukuPlayerConfig()) return false;
    if (hasDanmukuPlayerConfig()) {
      if (!getDanmukuPlayerConfig()
          .equals(other.getDanmukuPlayerConfig())) return false;
    }
    if (!getDanmukuPlayerDynamicConfigList()
        .equals(other.getDanmukuPlayerDynamicConfigList())) return false;
    if (hasDanmukuPlayerConfigPanel() != other.hasDanmukuPlayerConfigPanel()) return false;
    if (hasDanmukuPlayerConfigPanel()) {
      if (!getDanmukuPlayerConfigPanel()
          .equals(other.getDanmukuPlayerConfigPanel())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDanmukuDefaultPlayerConfig()) {
      hash = (37 * hash) + DANMUKU_DEFAULT_PLAYER_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDanmukuDefaultPlayerConfig().hashCode();
    }
    if (hasDanmukuPlayerConfig()) {
      hash = (37 * hash) + DANMUKU_PLAYER_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDanmukuPlayerConfig().hashCode();
    }
    if (getDanmukuPlayerDynamicConfigCount() > 0) {
      hash = (37 * hash) + DANMUKU_PLAYER_DYNAMIC_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDanmukuPlayerDynamicConfigList().hashCode();
    }
    if (hasDanmukuPlayerConfigPanel()) {
      hash = (37 * hash) + DANMUKU_PLAYER_CONFIG_PANEL_FIELD_NUMBER;
      hash = (53 * hash) + getDanmukuPlayerConfigPanel().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bilibili.community.service.dm.v1.DanmuPlayerViewConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 弹幕配置信息
   * </pre>
   *
   * Protobuf type {@code bilibili.community.service.dm.v1.DanmuPlayerViewConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.community.service.dm.v1.DanmuPlayerViewConfig)
      bilibili.community.service.dm.v1.DanmuPlayerViewConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bilibili.community.service.dm.v1.Dm.internal_static_bilibili_community_service_dm_v1_DanmuPlayerViewConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bilibili.community.service.dm.v1.Dm.internal_static_bilibili_community_service_dm_v1_DanmuPlayerViewConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bilibili.community.service.dm.v1.DanmuPlayerViewConfig.class, bilibili.community.service.dm.v1.DanmuPlayerViewConfig.Builder.class);
    }

    // Construct using bilibili.community.service.dm.v1.DanmuPlayerViewConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      danmukuDefaultPlayerConfig_ = null;
      if (danmukuDefaultPlayerConfigBuilder_ != null) {
        danmukuDefaultPlayerConfigBuilder_.dispose();
        danmukuDefaultPlayerConfigBuilder_ = null;
      }
      danmukuPlayerConfig_ = null;
      if (danmukuPlayerConfigBuilder_ != null) {
        danmukuPlayerConfigBuilder_.dispose();
        danmukuPlayerConfigBuilder_ = null;
      }
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        danmukuPlayerDynamicConfig_ = java.util.Collections.emptyList();
      } else {
        danmukuPlayerDynamicConfig_ = null;
        danmukuPlayerDynamicConfigBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      danmukuPlayerConfigPanel_ = null;
      if (danmukuPlayerConfigPanelBuilder_ != null) {
        danmukuPlayerConfigPanelBuilder_.dispose();
        danmukuPlayerConfigPanelBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bilibili.community.service.dm.v1.Dm.internal_static_bilibili_community_service_dm_v1_DanmuPlayerViewConfig_descriptor;
    }

    @java.lang.Override
    public bilibili.community.service.dm.v1.DanmuPlayerViewConfig getDefaultInstanceForType() {
      return bilibili.community.service.dm.v1.DanmuPlayerViewConfig.getDefaultInstance();
    }

    @java.lang.Override
    public bilibili.community.service.dm.v1.DanmuPlayerViewConfig build() {
      bilibili.community.service.dm.v1.DanmuPlayerViewConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public bilibili.community.service.dm.v1.DanmuPlayerViewConfig buildPartial() {
      bilibili.community.service.dm.v1.DanmuPlayerViewConfig result = new bilibili.community.service.dm.v1.DanmuPlayerViewConfig(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(bilibili.community.service.dm.v1.DanmuPlayerViewConfig result) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          danmukuPlayerDynamicConfig_ = java.util.Collections.unmodifiableList(danmukuPlayerDynamicConfig_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.danmukuPlayerDynamicConfig_ = danmukuPlayerDynamicConfig_;
      } else {
        result.danmukuPlayerDynamicConfig_ = danmukuPlayerDynamicConfigBuilder_.build();
      }
    }

    private void buildPartial0(bilibili.community.service.dm.v1.DanmuPlayerViewConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.danmukuDefaultPlayerConfig_ = danmukuDefaultPlayerConfigBuilder_ == null
            ? danmukuDefaultPlayerConfig_
            : danmukuDefaultPlayerConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.danmukuPlayerConfig_ = danmukuPlayerConfigBuilder_ == null
            ? danmukuPlayerConfig_
            : danmukuPlayerConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.danmukuPlayerConfigPanel_ = danmukuPlayerConfigPanelBuilder_ == null
            ? danmukuPlayerConfigPanel_
            : danmukuPlayerConfigPanelBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bilibili.community.service.dm.v1.DanmuPlayerViewConfig) {
        return mergeFrom((bilibili.community.service.dm.v1.DanmuPlayerViewConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bilibili.community.service.dm.v1.DanmuPlayerViewConfig other) {
      if (other == bilibili.community.service.dm.v1.DanmuPlayerViewConfig.getDefaultInstance()) return this;
      if (other.hasDanmukuDefaultPlayerConfig()) {
        mergeDanmukuDefaultPlayerConfig(other.getDanmukuDefaultPlayerConfig());
      }
      if (other.hasDanmukuPlayerConfig()) {
        mergeDanmukuPlayerConfig(other.getDanmukuPlayerConfig());
      }
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        if (!other.danmukuPlayerDynamicConfig_.isEmpty()) {
          if (danmukuPlayerDynamicConfig_.isEmpty()) {
            danmukuPlayerDynamicConfig_ = other.danmukuPlayerDynamicConfig_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDanmukuPlayerDynamicConfigIsMutable();
            danmukuPlayerDynamicConfig_.addAll(other.danmukuPlayerDynamicConfig_);
          }
          onChanged();
        }
      } else {
        if (!other.danmukuPlayerDynamicConfig_.isEmpty()) {
          if (danmukuPlayerDynamicConfigBuilder_.isEmpty()) {
            danmukuPlayerDynamicConfigBuilder_.dispose();
            danmukuPlayerDynamicConfigBuilder_ = null;
            danmukuPlayerDynamicConfig_ = other.danmukuPlayerDynamicConfig_;
            bitField0_ = (bitField0_ & ~0x00000004);
            danmukuPlayerDynamicConfigBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDanmukuPlayerDynamicConfigFieldBuilder() : null;
          } else {
            danmukuPlayerDynamicConfigBuilder_.addAllMessages(other.danmukuPlayerDynamicConfig_);
          }
        }
      }
      if (other.hasDanmukuPlayerConfigPanel()) {
        mergeDanmukuPlayerConfigPanel(other.getDanmukuPlayerConfigPanel());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDanmukuDefaultPlayerConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getDanmukuPlayerConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig m =
                  input.readMessage(
                      bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.parser(),
                      extensionRegistry);
              if (danmukuPlayerDynamicConfigBuilder_ == null) {
                ensureDanmukuPlayerDynamicConfigIsMutable();
                danmukuPlayerDynamicConfig_.add(m);
              } else {
                danmukuPlayerDynamicConfigBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getDanmukuPlayerConfigPanelFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmukuDefaultPlayerConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfigOrBuilder> danmukuDefaultPlayerConfigBuilder_;
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     * @return Whether the danmukuDefaultPlayerConfig field is set.
     */
    public boolean hasDanmukuDefaultPlayerConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     * @return The danmukuDefaultPlayerConfig.
     */
    public bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig getDanmukuDefaultPlayerConfig() {
      if (danmukuDefaultPlayerConfigBuilder_ == null) {
        return danmukuDefaultPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.getDefaultInstance() : danmukuDefaultPlayerConfig_;
      } else {
        return danmukuDefaultPlayerConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public Builder setDanmukuDefaultPlayerConfig(bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig value) {
      if (danmukuDefaultPlayerConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        danmukuDefaultPlayerConfig_ = value;
      } else {
        danmukuDefaultPlayerConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public Builder setDanmukuDefaultPlayerConfig(
        bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.Builder builderForValue) {
      if (danmukuDefaultPlayerConfigBuilder_ == null) {
        danmukuDefaultPlayerConfig_ = builderForValue.build();
      } else {
        danmukuDefaultPlayerConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public Builder mergeDanmukuDefaultPlayerConfig(bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig value) {
      if (danmukuDefaultPlayerConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          danmukuDefaultPlayerConfig_ != null &&
          danmukuDefaultPlayerConfig_ != bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.getDefaultInstance()) {
          getDanmukuDefaultPlayerConfigBuilder().mergeFrom(value);
        } else {
          danmukuDefaultPlayerConfig_ = value;
        }
      } else {
        danmukuDefaultPlayerConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public Builder clearDanmukuDefaultPlayerConfig() {
      bitField0_ = (bitField0_ & ~0x00000001);
      danmukuDefaultPlayerConfig_ = null;
      if (danmukuDefaultPlayerConfigBuilder_ != null) {
        danmukuDefaultPlayerConfigBuilder_.dispose();
        danmukuDefaultPlayerConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.Builder getDanmukuDefaultPlayerConfigBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDanmukuDefaultPlayerConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    public bilibili.community.service.dm.v1.DanmuDefaultPlayerConfigOrBuilder getDanmukuDefaultPlayerConfigOrBuilder() {
      if (danmukuDefaultPlayerConfigBuilder_ != null) {
        return danmukuDefaultPlayerConfigBuilder_.getMessageOrBuilder();
      } else {
        return danmukuDefaultPlayerConfig_ == null ?
            bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.getDefaultInstance() : danmukuDefaultPlayerConfig_;
      }
    }
    /**
     * <pre>
     * 弹幕默认配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig danmuku_default_player_config = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfigOrBuilder> 
        getDanmukuDefaultPlayerConfigFieldBuilder() {
      if (danmukuDefaultPlayerConfigBuilder_ == null) {
        danmukuDefaultPlayerConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuDefaultPlayerConfigOrBuilder>(
                getDanmukuDefaultPlayerConfig(),
                getParentForChildren(),
                isClean());
        danmukuDefaultPlayerConfig_ = null;
      }
      return danmukuDefaultPlayerConfigBuilder_;
    }

    private bilibili.community.service.dm.v1.DanmuPlayerConfig danmukuPlayerConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerConfig, bilibili.community.service.dm.v1.DanmuPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigOrBuilder> danmukuPlayerConfigBuilder_;
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     * @return Whether the danmukuPlayerConfig field is set.
     */
    public boolean hasDanmukuPlayerConfig() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     * @return The danmukuPlayerConfig.
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfig getDanmukuPlayerConfig() {
      if (danmukuPlayerConfigBuilder_ == null) {
        return danmukuPlayerConfig_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfig.getDefaultInstance() : danmukuPlayerConfig_;
      } else {
        return danmukuPlayerConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public Builder setDanmukuPlayerConfig(bilibili.community.service.dm.v1.DanmuPlayerConfig value) {
      if (danmukuPlayerConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        danmukuPlayerConfig_ = value;
      } else {
        danmukuPlayerConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public Builder setDanmukuPlayerConfig(
        bilibili.community.service.dm.v1.DanmuPlayerConfig.Builder builderForValue) {
      if (danmukuPlayerConfigBuilder_ == null) {
        danmukuPlayerConfig_ = builderForValue.build();
      } else {
        danmukuPlayerConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public Builder mergeDanmukuPlayerConfig(bilibili.community.service.dm.v1.DanmuPlayerConfig value) {
      if (danmukuPlayerConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          danmukuPlayerConfig_ != null &&
          danmukuPlayerConfig_ != bilibili.community.service.dm.v1.DanmuPlayerConfig.getDefaultInstance()) {
          getDanmukuPlayerConfigBuilder().mergeFrom(value);
        } else {
          danmukuPlayerConfig_ = value;
        }
      } else {
        danmukuPlayerConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public Builder clearDanmukuPlayerConfig() {
      bitField0_ = (bitField0_ & ~0x00000002);
      danmukuPlayerConfig_ = null;
      if (danmukuPlayerConfigBuilder_ != null) {
        danmukuPlayerConfigBuilder_.dispose();
        danmukuPlayerConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfig.Builder getDanmukuPlayerConfigBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getDanmukuPlayerConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfigOrBuilder getDanmukuPlayerConfigOrBuilder() {
      if (danmukuPlayerConfigBuilder_ != null) {
        return danmukuPlayerConfigBuilder_.getMessageOrBuilder();
      } else {
        return danmukuPlayerConfig_ == null ?
            bilibili.community.service.dm.v1.DanmuPlayerConfig.getDefaultInstance() : danmukuPlayerConfig_;
      }
    }
    /**
     * <pre>
     * 弹幕用户配置
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfig danmuku_player_config = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerConfig, bilibili.community.service.dm.v1.DanmuPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigOrBuilder> 
        getDanmukuPlayerConfigFieldBuilder() {
      if (danmukuPlayerConfigBuilder_ == null) {
        danmukuPlayerConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            bilibili.community.service.dm.v1.DanmuPlayerConfig, bilibili.community.service.dm.v1.DanmuPlayerConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigOrBuilder>(
                getDanmukuPlayerConfig(),
                getParentForChildren(),
                isClean());
        danmukuPlayerConfig_ = null;
      }
      return danmukuPlayerConfigBuilder_;
    }

    private java.util.List<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig> danmukuPlayerDynamicConfig_ =
      java.util.Collections.emptyList();
    private void ensureDanmukuPlayerDynamicConfigIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        danmukuPlayerDynamicConfig_ = new java.util.ArrayList<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig>(danmukuPlayerDynamicConfig_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder> danmukuPlayerDynamicConfigBuilder_;

    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public java.util.List<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig> getDanmukuPlayerDynamicConfigList() {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        return java.util.Collections.unmodifiableList(danmukuPlayerDynamicConfig_);
      } else {
        return danmukuPlayerDynamicConfigBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public int getDanmukuPlayerDynamicConfigCount() {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        return danmukuPlayerDynamicConfig_.size();
      } else {
        return danmukuPlayerDynamicConfigBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig getDanmukuPlayerDynamicConfig(int index) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        return danmukuPlayerDynamicConfig_.get(index);
      } else {
        return danmukuPlayerDynamicConfigBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder setDanmukuPlayerDynamicConfig(
        int index, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig value) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.set(index, value);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder setDanmukuPlayerDynamicConfig(
        int index, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder builderForValue) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.set(index, builderForValue.build());
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder addDanmukuPlayerDynamicConfig(bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig value) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.add(value);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder addDanmukuPlayerDynamicConfig(
        int index, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig value) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.add(index, value);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder addDanmukuPlayerDynamicConfig(
        bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder builderForValue) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.add(builderForValue.build());
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder addDanmukuPlayerDynamicConfig(
        int index, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder builderForValue) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.add(index, builderForValue.build());
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder addAllDanmukuPlayerDynamicConfig(
        java.lang.Iterable<? extends bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig> values) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        ensureDanmukuPlayerDynamicConfigIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, danmukuPlayerDynamicConfig_);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder clearDanmukuPlayerDynamicConfig() {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        danmukuPlayerDynamicConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public Builder removeDanmukuPlayerDynamicConfig(int index) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        ensureDanmukuPlayerDynamicConfigIsMutable();
        danmukuPlayerDynamicConfig_.remove(index);
        onChanged();
      } else {
        danmukuPlayerDynamicConfigBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder getDanmukuPlayerDynamicConfigBuilder(
        int index) {
      return getDanmukuPlayerDynamicConfigFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder getDanmukuPlayerDynamicConfigOrBuilder(
        int index) {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        return danmukuPlayerDynamicConfig_.get(index);  } else {
        return danmukuPlayerDynamicConfigBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public java.util.List<? extends bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder> 
         getDanmukuPlayerDynamicConfigOrBuilderList() {
      if (danmukuPlayerDynamicConfigBuilder_ != null) {
        return danmukuPlayerDynamicConfigBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(danmukuPlayerDynamicConfig_);
      }
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder addDanmukuPlayerDynamicConfigBuilder() {
      return getDanmukuPlayerDynamicConfigFieldBuilder().addBuilder(
          bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder addDanmukuPlayerDynamicConfigBuilder(
        int index) {
      return getDanmukuPlayerDynamicConfigFieldBuilder().addBuilder(
          index, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * 弹幕显示区域自动配置列表
     * </pre>
     *
     * <code>repeated .bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig danmuku_player_dynamic_config = 3;</code>
     */
    public java.util.List<bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder> 
         getDanmukuPlayerDynamicConfigBuilderList() {
      return getDanmukuPlayerDynamicConfigFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder> 
        getDanmukuPlayerDynamicConfigFieldBuilder() {
      if (danmukuPlayerDynamicConfigBuilder_ == null) {
        danmukuPlayerDynamicConfigBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig.Builder, bilibili.community.service.dm.v1.DanmuPlayerDynamicConfigOrBuilder>(
                danmukuPlayerDynamicConfig_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        danmukuPlayerDynamicConfig_ = null;
      }
      return danmukuPlayerDynamicConfigBuilder_;
    }

    private bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmukuPlayerConfigPanel_;
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerConfigPanel, bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigPanelOrBuilder> danmukuPlayerConfigPanelBuilder_;
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     * @return Whether the danmukuPlayerConfigPanel field is set.
     */
    public boolean hasDanmukuPlayerConfigPanel() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     * @return The danmukuPlayerConfigPanel.
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfigPanel getDanmukuPlayerConfigPanel() {
      if (danmukuPlayerConfigPanelBuilder_ == null) {
        return danmukuPlayerConfigPanel_ == null ? bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.getDefaultInstance() : danmukuPlayerConfigPanel_;
      } else {
        return danmukuPlayerConfigPanelBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public Builder setDanmukuPlayerConfigPanel(bilibili.community.service.dm.v1.DanmuPlayerConfigPanel value) {
      if (danmukuPlayerConfigPanelBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        danmukuPlayerConfigPanel_ = value;
      } else {
        danmukuPlayerConfigPanelBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public Builder setDanmukuPlayerConfigPanel(
        bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.Builder builderForValue) {
      if (danmukuPlayerConfigPanelBuilder_ == null) {
        danmukuPlayerConfigPanel_ = builderForValue.build();
      } else {
        danmukuPlayerConfigPanelBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public Builder mergeDanmukuPlayerConfigPanel(bilibili.community.service.dm.v1.DanmuPlayerConfigPanel value) {
      if (danmukuPlayerConfigPanelBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          danmukuPlayerConfigPanel_ != null &&
          danmukuPlayerConfigPanel_ != bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.getDefaultInstance()) {
          getDanmukuPlayerConfigPanelBuilder().mergeFrom(value);
        } else {
          danmukuPlayerConfigPanel_ = value;
        }
      } else {
        danmukuPlayerConfigPanelBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public Builder clearDanmukuPlayerConfigPanel() {
      bitField0_ = (bitField0_ & ~0x00000008);
      danmukuPlayerConfigPanel_ = null;
      if (danmukuPlayerConfigPanelBuilder_ != null) {
        danmukuPlayerConfigPanelBuilder_.dispose();
        danmukuPlayerConfigPanelBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.Builder getDanmukuPlayerConfigPanelBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getDanmukuPlayerConfigPanelFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    public bilibili.community.service.dm.v1.DanmuPlayerConfigPanelOrBuilder getDanmukuPlayerConfigPanelOrBuilder() {
      if (danmukuPlayerConfigPanelBuilder_ != null) {
        return danmukuPlayerConfigPanelBuilder_.getMessageOrBuilder();
      } else {
        return danmukuPlayerConfigPanel_ == null ?
            bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.getDefaultInstance() : danmukuPlayerConfigPanel_;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>.bilibili.community.service.dm.v1.DanmuPlayerConfigPanel danmuku_player_config_panel = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.community.service.dm.v1.DanmuPlayerConfigPanel, bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigPanelOrBuilder> 
        getDanmukuPlayerConfigPanelFieldBuilder() {
      if (danmukuPlayerConfigPanelBuilder_ == null) {
        danmukuPlayerConfigPanelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            bilibili.community.service.dm.v1.DanmuPlayerConfigPanel, bilibili.community.service.dm.v1.DanmuPlayerConfigPanel.Builder, bilibili.community.service.dm.v1.DanmuPlayerConfigPanelOrBuilder>(
                getDanmukuPlayerConfigPanel(),
                getParentForChildren(),
                isClean());
        danmukuPlayerConfigPanel_ = null;
      }
      return danmukuPlayerConfigPanelBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bilibili.community.service.dm.v1.DanmuPlayerViewConfig)
  }

  // @@protoc_insertion_point(class_scope:bilibili.community.service.dm.v1.DanmuPlayerViewConfig)
  private static final bilibili.community.service.dm.v1.DanmuPlayerViewConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bilibili.community.service.dm.v1.DanmuPlayerViewConfig();
  }

  public static bilibili.community.service.dm.v1.DanmuPlayerViewConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DanmuPlayerViewConfig>
      PARSER = new com.google.protobuf.AbstractParser<DanmuPlayerViewConfig>() {
    @java.lang.Override
    public DanmuPlayerViewConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DanmuPlayerViewConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DanmuPlayerViewConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public bilibili.community.service.dm.v1.DanmuPlayerViewConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

