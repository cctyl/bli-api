// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/main/community/reply/v1/reply.proto

package bilibili.main.community.reply.v1;

/**
 * <pre>
 * 富文本
 * </pre>
 *
 * Protobuf type {@code bilibili.main.community.reply.v1.RichText}
 */
public final class RichText extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:bilibili.main.community.reply.v1.RichText)
    RichTextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RichText.newBuilder() to construct.
  private RichText(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RichText() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RichText();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return bilibili.main.community.reply.v1.ReplyOuterClass.internal_static_bilibili_main_community_reply_v1_RichText_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return bilibili.main.community.reply.v1.ReplyOuterClass.internal_static_bilibili_main_community_reply_v1_RichText_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            bilibili.main.community.reply.v1.RichText.class, bilibili.main.community.reply.v1.RichText.Builder.class);
  }

  private int itemCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object item_;
  public enum ItemCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    NOTE(1),
    ITEM_NOT_SET(0);
    private final int value;
    private ItemCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ItemCase valueOf(int value) {
      return forNumber(value);
    }

    public static ItemCase forNumber(int value) {
      switch (value) {
        case 1: return NOTE;
        case 0: return ITEM_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ItemCase
  getItemCase() {
    return ItemCase.forNumber(
        itemCase_);
  }

  public static final int NOTE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * 笔记
   * </pre>
   *
   * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
   * @return Whether the note field is set.
   */
  @java.lang.Override
  public boolean hasNote() {
    return itemCase_ == 1;
  }
  /**
   * <pre>
   * 笔记
   * </pre>
   *
   * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
   * @return The note.
   */
  @java.lang.Override
  public bilibili.main.community.reply.v1.RichTextNote getNote() {
    if (itemCase_ == 1) {
       return (bilibili.main.community.reply.v1.RichTextNote) item_;
    }
    return bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
  }
  /**
   * <pre>
   * 笔记
   * </pre>
   *
   * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
   */
  @java.lang.Override
  public bilibili.main.community.reply.v1.RichTextNoteOrBuilder getNoteOrBuilder() {
    if (itemCase_ == 1) {
       return (bilibili.main.community.reply.v1.RichTextNote) item_;
    }
    return bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (itemCase_ == 1) {
      output.writeMessage(1, (bilibili.main.community.reply.v1.RichTextNote) item_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (itemCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (bilibili.main.community.reply.v1.RichTextNote) item_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof bilibili.main.community.reply.v1.RichText)) {
      return super.equals(obj);
    }
    bilibili.main.community.reply.v1.RichText other = (bilibili.main.community.reply.v1.RichText) obj;

    if (!getItemCase().equals(other.getItemCase())) return false;
    switch (itemCase_) {
      case 1:
        if (!getNote()
            .equals(other.getNote())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (itemCase_) {
      case 1:
        hash = (37 * hash) + NOTE_FIELD_NUMBER;
        hash = (53 * hash) + getNote().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static bilibili.main.community.reply.v1.RichText parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.main.community.reply.v1.RichText parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static bilibili.main.community.reply.v1.RichText parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static bilibili.main.community.reply.v1.RichText parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(bilibili.main.community.reply.v1.RichText prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 富文本
   * </pre>
   *
   * Protobuf type {@code bilibili.main.community.reply.v1.RichText}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bilibili.main.community.reply.v1.RichText)
      bilibili.main.community.reply.v1.RichTextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bilibili.main.community.reply.v1.ReplyOuterClass.internal_static_bilibili_main_community_reply_v1_RichText_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bilibili.main.community.reply.v1.ReplyOuterClass.internal_static_bilibili_main_community_reply_v1_RichText_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bilibili.main.community.reply.v1.RichText.class, bilibili.main.community.reply.v1.RichText.Builder.class);
    }

    // Construct using bilibili.main.community.reply.v1.RichText.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (noteBuilder_ != null) {
        noteBuilder_.clear();
      }
      itemCase_ = 0;
      item_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return bilibili.main.community.reply.v1.ReplyOuterClass.internal_static_bilibili_main_community_reply_v1_RichText_descriptor;
    }

    @java.lang.Override
    public bilibili.main.community.reply.v1.RichText getDefaultInstanceForType() {
      return bilibili.main.community.reply.v1.RichText.getDefaultInstance();
    }

    @java.lang.Override
    public bilibili.main.community.reply.v1.RichText build() {
      bilibili.main.community.reply.v1.RichText result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public bilibili.main.community.reply.v1.RichText buildPartial() {
      bilibili.main.community.reply.v1.RichText result = new bilibili.main.community.reply.v1.RichText(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(bilibili.main.community.reply.v1.RichText result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(bilibili.main.community.reply.v1.RichText result) {
      result.itemCase_ = itemCase_;
      result.item_ = this.item_;
      if (itemCase_ == 1 &&
          noteBuilder_ != null) {
        result.item_ = noteBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof bilibili.main.community.reply.v1.RichText) {
        return mergeFrom((bilibili.main.community.reply.v1.RichText)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(bilibili.main.community.reply.v1.RichText other) {
      if (other == bilibili.main.community.reply.v1.RichText.getDefaultInstance()) return this;
      switch (other.getItemCase()) {
        case NOTE: {
          mergeNote(other.getNote());
          break;
        }
        case ITEM_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getNoteFieldBuilder().getBuilder(),
                  extensionRegistry);
              itemCase_ = 1;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int itemCase_ = 0;
    private java.lang.Object item_;
    public ItemCase
        getItemCase() {
      return ItemCase.forNumber(
          itemCase_);
    }

    public Builder clearItem() {
      itemCase_ = 0;
      item_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.main.community.reply.v1.RichTextNote, bilibili.main.community.reply.v1.RichTextNote.Builder, bilibili.main.community.reply.v1.RichTextNoteOrBuilder> noteBuilder_;
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     * @return Whether the note field is set.
     */
    @java.lang.Override
    public boolean hasNote() {
      return itemCase_ == 1;
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     * @return The note.
     */
    @java.lang.Override
    public bilibili.main.community.reply.v1.RichTextNote getNote() {
      if (noteBuilder_ == null) {
        if (itemCase_ == 1) {
          return (bilibili.main.community.reply.v1.RichTextNote) item_;
        }
        return bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
      } else {
        if (itemCase_ == 1) {
          return noteBuilder_.getMessage();
        }
        return bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    public Builder setNote(bilibili.main.community.reply.v1.RichTextNote value) {
      if (noteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        item_ = value;
        onChanged();
      } else {
        noteBuilder_.setMessage(value);
      }
      itemCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    public Builder setNote(
        bilibili.main.community.reply.v1.RichTextNote.Builder builderForValue) {
      if (noteBuilder_ == null) {
        item_ = builderForValue.build();
        onChanged();
      } else {
        noteBuilder_.setMessage(builderForValue.build());
      }
      itemCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    public Builder mergeNote(bilibili.main.community.reply.v1.RichTextNote value) {
      if (noteBuilder_ == null) {
        if (itemCase_ == 1 &&
            item_ != bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance()) {
          item_ = bilibili.main.community.reply.v1.RichTextNote.newBuilder((bilibili.main.community.reply.v1.RichTextNote) item_)
              .mergeFrom(value).buildPartial();
        } else {
          item_ = value;
        }
        onChanged();
      } else {
        if (itemCase_ == 1) {
          noteBuilder_.mergeFrom(value);
        } else {
          noteBuilder_.setMessage(value);
        }
      }
      itemCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    public Builder clearNote() {
      if (noteBuilder_ == null) {
        if (itemCase_ == 1) {
          itemCase_ = 0;
          item_ = null;
          onChanged();
        }
      } else {
        if (itemCase_ == 1) {
          itemCase_ = 0;
          item_ = null;
        }
        noteBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    public bilibili.main.community.reply.v1.RichTextNote.Builder getNoteBuilder() {
      return getNoteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    @java.lang.Override
    public bilibili.main.community.reply.v1.RichTextNoteOrBuilder getNoteOrBuilder() {
      if ((itemCase_ == 1) && (noteBuilder_ != null)) {
        return noteBuilder_.getMessageOrBuilder();
      } else {
        if (itemCase_ == 1) {
          return (bilibili.main.community.reply.v1.RichTextNote) item_;
        }
        return bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 笔记
     * </pre>
     *
     * <code>.bilibili.main.community.reply.v1.RichTextNote note = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        bilibili.main.community.reply.v1.RichTextNote, bilibili.main.community.reply.v1.RichTextNote.Builder, bilibili.main.community.reply.v1.RichTextNoteOrBuilder> 
        getNoteFieldBuilder() {
      if (noteBuilder_ == null) {
        if (!(itemCase_ == 1)) {
          item_ = bilibili.main.community.reply.v1.RichTextNote.getDefaultInstance();
        }
        noteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            bilibili.main.community.reply.v1.RichTextNote, bilibili.main.community.reply.v1.RichTextNote.Builder, bilibili.main.community.reply.v1.RichTextNoteOrBuilder>(
                (bilibili.main.community.reply.v1.RichTextNote) item_,
                getParentForChildren(),
                isClean());
        item_ = null;
      }
      itemCase_ = 1;
      onChanged();
      return noteBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:bilibili.main.community.reply.v1.RichText)
  }

  // @@protoc_insertion_point(class_scope:bilibili.main.community.reply.v1.RichText)
  private static final bilibili.main.community.reply.v1.RichText DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new bilibili.main.community.reply.v1.RichText();
  }

  public static bilibili.main.community.reply.v1.RichText getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RichText>
      PARSER = new com.google.protobuf.AbstractParser<RichText>() {
    @java.lang.Override
    public RichText parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RichText> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RichText> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public bilibili.main.community.reply.v1.RichText getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

