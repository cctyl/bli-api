// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/app/playurl/v1/playurl.proto

package bilibili.app.playurl.v1;

/**
 * <pre>
 * 设置类型
 * </pre>
 *
 * Protobuf enum {@code bilibili.app.playurl.v1.ConfType}
 */
public enum ConfType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>NoType = 0;</code>
   */
  NoType(0),
  /**
   * <pre>
   * 镜像反转
   * </pre>
   *
   * <code>FLIPCONF = 1;</code>
   */
  FLIPCONF(1),
  /**
   * <pre>
   * 视频投屏
   * </pre>
   *
   * <code>CASTCONF = 2;</code>
   */
  CASTCONF(2),
  /**
   * <pre>
   * 反馈
   * </pre>
   *
   * <code>FEEDBACK = 3;</code>
   */
  FEEDBACK(3),
  /**
   * <pre>
   * 字幕
   * </pre>
   *
   * <code>SUBTITLE = 4;</code>
   */
  SUBTITLE(4),
  /**
   * <pre>
   * 播放速度
   * </pre>
   *
   * <code>PLAYBACKRATE = 5;</code>
   */
  PLAYBACKRATE(5),
  /**
   * <pre>
   * 定时停止播放
   * </pre>
   *
   * <code>TIMEUP = 6;</code>
   */
  TIMEUP(6),
  /**
   * <pre>
   * 播放方式
   * </pre>
   *
   * <code>PLAYBACKMODE = 7;</code>
   */
  PLAYBACKMODE(7),
  /**
   * <pre>
   * 画面尺寸
   * </pre>
   *
   * <code>SCALEMODE = 8;</code>
   */
  SCALEMODE(8),
  /**
   * <pre>
   * 后台播放
   * </pre>
   *
   * <code>BACKGROUNDPLAY = 9;</code>
   */
  BACKGROUNDPLAY(9),
  /**
   * <pre>
   * 顶
   * </pre>
   *
   * <code>LIKE = 10;</code>
   */
  LIKE(10),
  /**
   * <pre>
   * 踩
   * </pre>
   *
   * <code>DISLIKE = 11;</code>
   */
  DISLIKE(11),
  /**
   * <pre>
   * 投币
   * </pre>
   *
   * <code>COIN = 12;</code>
   */
  COIN(12),
  /**
   * <pre>
   * 充电
   * </pre>
   *
   * <code>ELEC = 13;</code>
   */
  ELEC(13),
  /**
   * <pre>
   * 分享
   * </pre>
   *
   * <code>SHARE = 14;</code>
   */
  SHARE(14),
  /**
   * <pre>
   * 截图
   * </pre>
   *
   * <code>SCREENSHOT = 15;</code>
   */
  SCREENSHOT(15),
  /**
   * <pre>
   * 锁屏
   * </pre>
   *
   * <code>LOCKSCREEN = 16;</code>
   */
  LOCKSCREEN(16),
  /**
   * <pre>
   * 推荐
   * </pre>
   *
   * <code>RECOMMEND = 17;</code>
   */
  RECOMMEND(17),
  /**
   * <pre>
   * 倍速
   * </pre>
   *
   * <code>PLAYBACKSPEED = 18;</code>
   */
  PLAYBACKSPEED(18),
  /**
   * <pre>
   * 清晰度
   * </pre>
   *
   * <code>DEFINITION = 19;</code>
   */
  DEFINITION(19),
  /**
   * <pre>
   * 选集
   * </pre>
   *
   * <code>SELECTIONS = 20;</code>
   */
  SELECTIONS(20),
  /**
   * <pre>
   * 下一集
   * </pre>
   *
   * <code>NEXT = 21;</code>
   */
  NEXT(21),
  /**
   * <pre>
   * 编辑弹幕
   * </pre>
   *
   * <code>EDITDM = 22;</code>
   */
  EDITDM(22),
  /**
   * <pre>
   * 小窗
   * </pre>
   *
   * <code>SMALLWINDOW = 23;</code>
   */
  SMALLWINDOW(23),
  /**
   * <pre>
   * 播放震动
   * </pre>
   *
   * <code>SHAKE = 24;</code>
   */
  SHAKE(24),
  /**
   * <pre>
   * 外层面板弹幕设置
   * </pre>
   *
   * <code>OUTERDM = 25;</code>
   */
  OUTERDM(25),
  /**
   * <pre>
   * 三点内弹幕设置
   * </pre>
   *
   * <code>INNERDM = 26;</code>
   */
  INNERDM(26),
  /**
   * <pre>
   * 全景
   * </pre>
   *
   * <code>PANORAMA = 27;</code>
   */
  PANORAMA(27),
  /**
   * <pre>
   * 杜比
   * </pre>
   *
   * <code>DOLBY = 28;</code>
   */
  DOLBY(28),
  /**
   * <pre>
   * 颜色滤镜
   * </pre>
   *
   * <code>COLORFILTER = 29;</code>
   */
  COLORFILTER(29),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 
   * </pre>
   *
   * <code>NoType = 0;</code>
   */
  public static final int NoType_VALUE = 0;
  /**
   * <pre>
   * 镜像反转
   * </pre>
   *
   * <code>FLIPCONF = 1;</code>
   */
  public static final int FLIPCONF_VALUE = 1;
  /**
   * <pre>
   * 视频投屏
   * </pre>
   *
   * <code>CASTCONF = 2;</code>
   */
  public static final int CASTCONF_VALUE = 2;
  /**
   * <pre>
   * 反馈
   * </pre>
   *
   * <code>FEEDBACK = 3;</code>
   */
  public static final int FEEDBACK_VALUE = 3;
  /**
   * <pre>
   * 字幕
   * </pre>
   *
   * <code>SUBTITLE = 4;</code>
   */
  public static final int SUBTITLE_VALUE = 4;
  /**
   * <pre>
   * 播放速度
   * </pre>
   *
   * <code>PLAYBACKRATE = 5;</code>
   */
  public static final int PLAYBACKRATE_VALUE = 5;
  /**
   * <pre>
   * 定时停止播放
   * </pre>
   *
   * <code>TIMEUP = 6;</code>
   */
  public static final int TIMEUP_VALUE = 6;
  /**
   * <pre>
   * 播放方式
   * </pre>
   *
   * <code>PLAYBACKMODE = 7;</code>
   */
  public static final int PLAYBACKMODE_VALUE = 7;
  /**
   * <pre>
   * 画面尺寸
   * </pre>
   *
   * <code>SCALEMODE = 8;</code>
   */
  public static final int SCALEMODE_VALUE = 8;
  /**
   * <pre>
   * 后台播放
   * </pre>
   *
   * <code>BACKGROUNDPLAY = 9;</code>
   */
  public static final int BACKGROUNDPLAY_VALUE = 9;
  /**
   * <pre>
   * 顶
   * </pre>
   *
   * <code>LIKE = 10;</code>
   */
  public static final int LIKE_VALUE = 10;
  /**
   * <pre>
   * 踩
   * </pre>
   *
   * <code>DISLIKE = 11;</code>
   */
  public static final int DISLIKE_VALUE = 11;
  /**
   * <pre>
   * 投币
   * </pre>
   *
   * <code>COIN = 12;</code>
   */
  public static final int COIN_VALUE = 12;
  /**
   * <pre>
   * 充电
   * </pre>
   *
   * <code>ELEC = 13;</code>
   */
  public static final int ELEC_VALUE = 13;
  /**
   * <pre>
   * 分享
   * </pre>
   *
   * <code>SHARE = 14;</code>
   */
  public static final int SHARE_VALUE = 14;
  /**
   * <pre>
   * 截图
   * </pre>
   *
   * <code>SCREENSHOT = 15;</code>
   */
  public static final int SCREENSHOT_VALUE = 15;
  /**
   * <pre>
   * 锁屏
   * </pre>
   *
   * <code>LOCKSCREEN = 16;</code>
   */
  public static final int LOCKSCREEN_VALUE = 16;
  /**
   * <pre>
   * 推荐
   * </pre>
   *
   * <code>RECOMMEND = 17;</code>
   */
  public static final int RECOMMEND_VALUE = 17;
  /**
   * <pre>
   * 倍速
   * </pre>
   *
   * <code>PLAYBACKSPEED = 18;</code>
   */
  public static final int PLAYBACKSPEED_VALUE = 18;
  /**
   * <pre>
   * 清晰度
   * </pre>
   *
   * <code>DEFINITION = 19;</code>
   */
  public static final int DEFINITION_VALUE = 19;
  /**
   * <pre>
   * 选集
   * </pre>
   *
   * <code>SELECTIONS = 20;</code>
   */
  public static final int SELECTIONS_VALUE = 20;
  /**
   * <pre>
   * 下一集
   * </pre>
   *
   * <code>NEXT = 21;</code>
   */
  public static final int NEXT_VALUE = 21;
  /**
   * <pre>
   * 编辑弹幕
   * </pre>
   *
   * <code>EDITDM = 22;</code>
   */
  public static final int EDITDM_VALUE = 22;
  /**
   * <pre>
   * 小窗
   * </pre>
   *
   * <code>SMALLWINDOW = 23;</code>
   */
  public static final int SMALLWINDOW_VALUE = 23;
  /**
   * <pre>
   * 播放震动
   * </pre>
   *
   * <code>SHAKE = 24;</code>
   */
  public static final int SHAKE_VALUE = 24;
  /**
   * <pre>
   * 外层面板弹幕设置
   * </pre>
   *
   * <code>OUTERDM = 25;</code>
   */
  public static final int OUTERDM_VALUE = 25;
  /**
   * <pre>
   * 三点内弹幕设置
   * </pre>
   *
   * <code>INNERDM = 26;</code>
   */
  public static final int INNERDM_VALUE = 26;
  /**
   * <pre>
   * 全景
   * </pre>
   *
   * <code>PANORAMA = 27;</code>
   */
  public static final int PANORAMA_VALUE = 27;
  /**
   * <pre>
   * 杜比
   * </pre>
   *
   * <code>DOLBY = 28;</code>
   */
  public static final int DOLBY_VALUE = 28;
  /**
   * <pre>
   * 颜色滤镜
   * </pre>
   *
   * <code>COLORFILTER = 29;</code>
   */
  public static final int COLORFILTER_VALUE = 29;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ConfType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ConfType forNumber(int value) {
    switch (value) {
      case 0: return NoType;
      case 1: return FLIPCONF;
      case 2: return CASTCONF;
      case 3: return FEEDBACK;
      case 4: return SUBTITLE;
      case 5: return PLAYBACKRATE;
      case 6: return TIMEUP;
      case 7: return PLAYBACKMODE;
      case 8: return SCALEMODE;
      case 9: return BACKGROUNDPLAY;
      case 10: return LIKE;
      case 11: return DISLIKE;
      case 12: return COIN;
      case 13: return ELEC;
      case 14: return SHARE;
      case 15: return SCREENSHOT;
      case 16: return LOCKSCREEN;
      case 17: return RECOMMEND;
      case 18: return PLAYBACKSPEED;
      case 19: return DEFINITION;
      case 20: return SELECTIONS;
      case 21: return NEXT;
      case 22: return EDITDM;
      case 23: return SMALLWINDOW;
      case 24: return SHAKE;
      case 25: return OUTERDM;
      case 26: return INNERDM;
      case 27: return PANORAMA;
      case 28: return DOLBY;
      case 29: return COLORFILTER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ConfType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ConfType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ConfType>() {
          public ConfType findValueByNumber(int number) {
            return ConfType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return bilibili.app.playurl.v1.Playurl.getDescriptor().getEnumTypes().get(2);
  }

  private static final ConfType[] VALUES = values();

  public static ConfType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ConfType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:bilibili.app.playurl.v1.ConfType)
}

