// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bilibili/app/listener/v1/listener.proto

package bilibili.app.listener.v1;

public interface FavFolderOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bilibili.app.listener.v1.FavFolder)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * </pre>
   *
   * <code>int64 fid = 1;</code>
   * @return The fid.
   */
  long getFid();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 folder_type = 2;</code>
   * @return The folderType.
   */
  int getFolderType();

  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.app.listener.v1.FavFolderAuthor owner = 3;</code>
   * @return Whether the owner field is set.
   */
  boolean hasOwner();
  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.app.listener.v1.FavFolderAuthor owner = 3;</code>
   * @return The owner.
   */
  bilibili.app.listener.v1.FavFolderAuthor getOwner();
  /**
   * <pre>
   * </pre>
   *
   * <code>.bilibili.app.listener.v1.FavFolderAuthor owner = 3;</code>
   */
  bilibili.app.listener.v1.FavFolderAuthorOrBuilder getOwnerOrBuilder();

  /**
   * <pre>
   * </pre>
   *
   * <code>string name = 4;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * </pre>
   *
   * <code>string name = 4;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * </pre>
   *
   * <code>string cover = 5;</code>
   * @return The cover.
   */
  java.lang.String getCover();
  /**
   * <pre>
   * </pre>
   *
   * <code>string cover = 5;</code>
   * @return The bytes for cover.
   */
  com.google.protobuf.ByteString
      getCoverBytes();

  /**
   * <pre>
   * </pre>
   *
   * <code>string desc = 6;</code>
   * @return The desc.
   */
  java.lang.String getDesc();
  /**
   * <pre>
   * </pre>
   *
   * <code>string desc = 6;</code>
   * @return The bytes for desc.
   */
  com.google.protobuf.ByteString
      getDescBytes();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 count = 7;</code>
   * @return The count.
   */
  int getCount();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 attr = 8;</code>
   * @return The attr.
   */
  int getAttr();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 state = 9;</code>
   * @return The state.
   */
  int getState();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 favored = 10;</code>
   * @return The favored.
   */
  int getFavored();

  /**
   * <pre>
   * </pre>
   *
   * <code>int64 ctime = 11;</code>
   * @return The ctime.
   */
  long getCtime();

  /**
   * <pre>
   * </pre>
   *
   * <code>int64 mtime = 12;</code>
   * @return The mtime.
   */
  long getMtime();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 stat_fav_cnt = 13;</code>
   * @return The statFavCnt.
   */
  int getStatFavCnt();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 stat_share_cnt = 14;</code>
   * @return The statShareCnt.
   */
  int getStatShareCnt();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 stat_like_cnt = 15;</code>
   * @return The statLikeCnt.
   */
  int getStatLikeCnt();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 stat_Play_cnt = 16;</code>
   * @return The statPlayCnt.
   */
  int getStatPlayCnt();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 stat_reply_cnt = 17;</code>
   * @return The statReplyCnt.
   */
  int getStatReplyCnt();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 fav_state = 18;</code>
   * @return The favState.
   */
  int getFavState();
}
